"""
Django settings for Mxonline project.

Generated by 'django-admin startproject' using Django 1.9.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

# django自动生成的变量,用于获取项目的根目录;
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# app搜索目录的配置：加入到python的搜索目录之下;将apps连接至根目录,即可在搜索过程中找到对应的目录;
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'je!qf@xx!=@s5a4i3=*f6_6_2h116ib74m6u)uipkip5y)l!e)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []

# 在配置生产环境的时候必须改成False;否则在调试模式下是会显示报错的相应信息,同时会暴露网站的相关设置;
# DEBUG = False
# 当debug设置的值为False时,必须修改下面的值;
# ALLOWED_HOSTS = ['*']

# Application definition

# 设置邮箱和用户名均可登录;
# 此处设置的方法类似static文件的样式;
# 括号中指明任何一个函数都可以完成,此处我们将该函数放置于users.views中;
AUTHENTICATION_BACKENDS = (
    'users.views.CustomBackend',
)

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    # 对request及response进行拦截;获取其中的sessionid将其在浏览器中与服务器中的数据进行比对;
    # 如果浏览器中的sessionid与服务器中的一致,则在前端页面登录页面中能实现自动登录;
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'courses',
    'organization',
    'operation',
    'xadmin',
    'crispy_forms',
    'captcha',
    'pure_pagination',
    # 富文本编辑器;
    'DjangoUeditor',
]

# 此处重载是为了使我们的UserProfile生效
AUTH_USER_MODEL = "users.UserProfile"

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Mxonline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            # 上下文处理器;
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 添加图片处理器：做好配置之后,会将{{media_url}}注册到前端页面(org-list)中,从而取到完整的值;
                'django.core.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'Mxonline.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases
import pymysql
pymysql.install_as_MySQLdb()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'eduonline',
        'USER':'root',
        'PASSWORD':'100230',
        'HOST':'127.0.0.1',
        'PORT':3306,
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# 数据库存储使用时间,False为本地时间,True为UTC时间;
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

# 静态文件存放的目录;
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# 发送邮件的setting配置;
EMAIL_HOST = "smtp.sina.com"
EMAIL_PORT = 25
# 发送邮件的主机邮箱;
EMAIL_HOST_USER = "kylin100230@sina.com"
EMAIL_HOST_PASSWORD = "wangcorleone1992"
# 该参数任意;
EMAIL_USE_TLS= True
# 必须与EMAIL_HOST_USER一致;
EMAIL_FROM = "kylin100230@sina.com"

# 设置我们上传文件的路径(例如图片等);
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 此处的设置是与加上404/500的设置连同的配置;
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')


